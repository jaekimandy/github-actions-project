apiVersion: apps/v1
kind: Deployment
metadata:
  name: devops-demo-app
  namespace: production
  labels:
    app: devops-demo
    environment: production
    version: "1.0.0"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: devops-demo
  template:
    metadata:
      labels:
        app: devops-demo
        environment: production
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
        checksum/config: "${CONFIG_CHECKSUM}"
    spec:
      containers:
      - name: app
        image: devops-demo:latest
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: FLASK_ENV
          value: "production"
        - name: LOG_LEVEL
          value: "WARNING"
        - name: CACHE_TYPE
          value: "redis"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: devops-demo-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: devops-demo-secrets
              key: redis-url
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: devops-demo-secrets
              key: secret-key
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        - name: logs-volume
          mountPath: /app/logs
      volumes:
      - name: config-volume
        configMap:
          name: devops-demo-config
      - name: logs-volume
        emptyDir: {}
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      imagePullSecrets:
      - name: regcred
      nodeSelector:
        dedicated: production
      tolerations:
      - key: "dedicated"
        operator: "Equal"
        value: "production"
        effect: "NoSchedule"
